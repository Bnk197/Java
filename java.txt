public class GFG { 
  
    final static int NO_OF_CHARS = 256; 

    public static int max_dist_char(String str, int n) { 
  
        
        int count[] = new int[NO_OF_CHARS]; 

        for (int i = 0; i < n; i++) { 
            count[str.charAt(i)]++; 
        } 
  
        int max_dist = 0; 
        for (int i = 0; i < NO_OF_CHARS; i++) { 
            if (count[i] != 0) { 
                max_dist++; 
            } 
        } 
  
        return max_dist; 
    } 
  
    public static int Substr_Dist_Char(String str) { 
  
        int n = str.length();     
        
        int max_dist = max_dist_char(str, n); 
        int minl = n; 

        for (int i = 0; i < n; i++) { 
            for (int j = 0; j < n; j++) { 
                  
                String subs = null; 
                if(i<j) 
                    subs = str.substring(i, j); 
                else
                    subs = str.substring(j, i); 
                int subs_lenght = subs.length(); 
                int sub_dist_char = max_dist_char(subs, subs_lenght); 
  
             
                if (subs_lenght < minl && max_dist == sub_dist_char) { 
                    minl = subs_lenght; 
                } 
            } 
        } 
        return minl; 
    } 
  
    public static void main(String[] args) { 
        String str = "abcda"; 
  
        int len = Substr_Dist_Char(str); 
        System.out.println(" The length of the smallest substring"
                + " consisting of maximum distinct "
                + "characters is: "+len); 
    } 
} 
  